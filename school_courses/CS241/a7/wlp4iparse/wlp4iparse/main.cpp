#include <iostream>
#include <string>
#include <unordered_map>
#include <sstream>
#include <algorithm>
#include <vector>
using namespace std;



class Tree{
public:
    string rule;
    pair<string,string> token;
    vector<Tree> children;
};

void prePrint(Tree t){
    if(t.rule == "") {
        cout << t.token.first << " " << t.token.second << endl;
    } else {
        cout << t.rule << endl;
        for(int i = 0; i < t.children.size(); i++) {
            int j = t.children.size()-1-i;
            prePrint(t.children[j]);
        }
    }
}


// error message class
class Failure {
    std::string message;
    
public:
    Failure(string message): message(move(message)) {}
    
    // Returns the message associated with the exception.
    const std::string &what() const{return message;}
};

string trim(const string &str) {
    size_t begin = str.find_first_not_of(" \t\n");
    if (begin == string::npos) return "";
    
    size_t end = str.find_last_not_of(" \t\n");
    
    return str.substr(begin, end - begin + 1);
}

//Skip the grammar part of the input.
void skipLine(istream &in) {
    string s;
    getline(in, s);
}

void skipGrammar(istream &in) {
    int i, numTerm, numNonTerm;
    
    // read the number of terminals and move to the next line
    in >> numTerm;
    skipLine(in);
    
    // skip the lines containing the terminals
    for (i = 0; i < numTerm; i++) {
        skipLine(in);
    }
    
    // read the number of non-terminals and move to the next line
    in >> numNonTerm;
    skipLine(in);
    
    // skip the lines containing the non-terminals
    for (i = 0; i < numNonTerm; i++) {
        skipLine(in);
    }
    
    // skip the line containing the start symbol
    skipLine(in);
    
}



int main(){
    bool b = 0;
    int i,numProductRule,numStates,numTrans,state=0,correct=0;
    string line,nextChar,nextCharSecond;
    vector<Tree> processing;
    vector<pair<string, string>>sequence;
    vector<int> printingr,preStates,printingl;
    unordered_map<int, vector<string>> rules;
    unordered_map<int, vector<string>> trans1;
    unordered_map<int, vector<int>> trans2;
    preStates.push_back(state);
    try {
        vector<string> r;
        r.push_back("start");
        r.push_back("BOF");
        r.push_back("procedures");
        r.push_back("EOF");
        rules[0] = r;
        r.clear();
        r.push_back("procedures");
        r.push_back("procedure");
        r.push_back("procedures");
        rules[1] = r;
        r.clear();
        r.push_back("procedures");
        r.push_back("main");
        rules[2] = r;
        r.clear();
        r.push_back("procedure");
        r.push_back("INT");
        r.push_back("ID");
        r.push_back("LPAREN");
        r.push_back("params");
        r.push_back("RPAREN");
        r.push_back("LBRACE");
        r.push_back("dcls");
        r.push_back("statements");
        r.push_back("RETURN");
        r.push_back("expr");
        r.push_back("SEMI");
        r.push_back("RBRACE");
        rules[3] = r;
        r.clear();
        r.push_back("main");
        r.push_back("INT");
        r.push_back("WAIN");
        r.push_back("LPAREN");
        r.push_back("dcl");
        r.push_back("COMMA");
        r.push_back("dcl");
        r.push_back("RPAREN");
        r.push_back("LBRACE");
        r.push_back("dcls");
        r.push_back("statements");
        r.push_back("RETURN");
        r.push_back("expr");
        r.push_back("SEMI");
        r.push_back("RBRACE");
        rules[4] = r;
        r.clear();
        r.push_back("params");
        rules[5] = r;
        r.clear();
        r.push_back("params");
        r.push_back("paramlist");
        rules[6] = r;
        r.clear();
        r.push_back("paramlist");
        r.push_back("dcl");
        rules[7] = r;
        r.clear();
        r.push_back("paramlist");
        r.push_back("dcl");
        r.push_back("COMMA");
        r.push_back("paramlist");
        rules[8] = r;
        r.clear();
        r.push_back("type");
        r.push_back("INT");
        rules[9] = r;
        r.clear();
        r.push_back("type");
        r.push_back("INT");
        r.push_back("STAR");
        rules[10] = r;
        r.clear();
        r.push_back("dcls");
        rules[11] = r;
        r.clear();
        r.push_back("dcls");
        r.push_back("dcls");
        r.push_back("dcl");
        r.push_back("BECOMES");
        r.push_back("NUM");
        r.push_back("SEMI");
        rules[12] = r;
        r.clear();
        r.push_back("dcls");
        r.push_back("dcls");
        r.push_back("dcl");
        r.push_back("BECOMES");
        r.push_back("NULL");
        r.push_back("SEMI");
        rules[13] = r;
        r.clear();
        r.push_back("dcl");
        r.push_back("type");
        r.push_back("ID");
        rules[14] = r;
        r.clear();
        r.push_back("statements");
        rules[15] = r;
        r.clear();
        r.push_back("statements");
        r.push_back("statements");
        r.push_back("statement");
        rules[16] = r;
        r.clear();
        r.push_back("statement");
        r.push_back("lvalue");
        r.push_back("BECOMES");
        r.push_back("expr");
        r.push_back("SEMI");
        rules[17] = r;
        r.clear();
        r.push_back("statement");
        r.push_back("IF");
        r.push_back("LPAREN");
        r.push_back("test");
        r.push_back("RPAREN");
        r.push_back("LBRACE");
        r.push_back("statements");
        r.push_back("RBRACE");
        r.push_back("ELSE");
        r.push_back("LBRACE");
        r.push_back("statements");
        r.push_back("RBRACE");
        rules[18] = r;
        r.clear();
        r.push_back("statement");
        r.push_back("WHILE");
        r.push_back("LPAREN");
        r.push_back("test");
        r.push_back("RPAREN");
        r.push_back("LBRACE");
        r.push_back("statements");
        r.push_back("RBRACE");
        rules[19] = r;
        r.clear();
        r.push_back("statement");
        r.push_back("PRINTLN");
        r.push_back("LPAREN");
        r.push_back("expr");
        r.push_back("RPAREN");
        r.push_back("SEMI");
        rules[20] = r;
        r.clear();
        r.push_back("statement");
        r.push_back("DELETE");
        r.push_back("LBRACK");
        r.push_back("RBRACK");
        r.push_back("expr");
        r.push_back("SEMI");
        rules[21] = r;
        r.clear();
        r.push_back("test");
        r.push_back("expr");
        r.push_back("EQ");
        r.push_back("expr");
        rules[22] = r;
        r.clear();
        r.push_back("test");
        r.push_back("expr");
        r.push_back("NE");
        r.push_back("expr");
        rules[23] = r;
        r.clear();
        r.push_back("test");
        r.push_back("expr");
        r.push_back("LT");
        r.push_back("expr");
        rules[24] = r;
        r.clear();
        r.push_back("test");
        r.push_back("expr");
        r.push_back("LE");
        r.push_back("expr");
        rules[25] = r;
        r.clear();
        r.push_back("test");
        r.push_back("expr");
        r.push_back("GE");
        r.push_back("expr");
        rules[26] = r;
        r.clear();
        r.push_back("test");
        r.push_back("expr");
        r.push_back("GT");
        r.push_back("expr");
        rules[27] = r;
        r.clear();
        r.push_back("expr");
        r.push_back("term");
        rules[28] = r;
        r.clear();
        r.push_back("expr");
        r.push_back("expr");
        r.push_back("PLUS");
        r.push_back("term");
        rules[29] = r;
        r.clear();
        r.push_back("expr");
        r.push_back("expr");
        r.push_back("MINUS");
        r.push_back("term");
        rules[30] = r;
        r.clear();
        r.push_back("term");
        r.push_back("factor");
        rules[31] = r;
        r.clear();
        r.push_back("term");
        r.push_back("term");
        r.push_back("STAR");
        r.push_back("factor");
        rules[32] = r;
        r.clear();
        r.push_back("term");
        r.push_back("term");
        r.push_back("SLASH");
        r.push_back("factor");
        rules[33] = r;
        r.clear();
        r.push_back("term");
        r.push_back("term");
        r.push_back("PCT");
        r.push_back("factor");
        rules[34] = r;
        r.clear();
        r.push_back("factor");
        r.push_back("ID");
        rules[35] = r;
        r.clear();
        r.push_back("factor");
        r.push_back("NUM");
        rules[36] = r;
        r.clear();
        r.push_back("factor");
        r.push_back("NULL");
        rules[37] = r;
        r.clear();
        r.push_back("factor");
        r.push_back("LPAREN");
        r.push_back("expr");
        r.push_back("RPAREN");
        rules[38] = r;
        r.clear();
        r.push_back("factor");
        r.push_back("AMP");
        r.push_back("lvalue");
        rules[39] = r;
        r.clear();
        r.push_back("factor");
        r.push_back("STAR");
        r.push_back("factor");
        rules[40] = r;
        r.clear();
        r.push_back("factor");
        r.push_back("NEW");
        r.push_back("INT");
        r.push_back("LBRACK");
        r.push_back("expr");
        r.push_back("RBRACK");
        rules[41] = r;
        r.clear();
        r.push_back("factor");
        r.push_back("ID");
        r.push_back("LPAREN");
        r.push_back("RPAREN");
        rules[42] = r;
        r.clear();
        r.push_back("factor");
        r.push_back("ID");
        r.push_back("LPAREN");
        r.push_back("arglist");
        r.push_back("RPAREN");
        rules[43] = r;
        r.clear();
        r.push_back("arglist");
        r.push_back("expr");
        rules[44] = r;
        r.clear();
        r.push_back("arglist");
        r.push_back("expr");
        r.push_back("COMMA");
        r.push_back("arglist");
        rules[45] = r;
        r.clear();
        r.push_back("lvalue");
        r.push_back("ID");
        rules[46] = r;
        r.clear();
        r.push_back("lvalue");
        r.push_back("STAR");
        r.push_back("factor");
        rules[47] = r;
        r.clear();
        r.push_back("lvalue");
        r.push_back("LPAREN");
        r.push_back("lvalue");
        r.push_back("RPAREN");
        rules[48] = r;
        trans1[72].push_back("RPAREN");
        trans1[112].push_back("paramlist");
        trans1[85].push_back("LPAREN");
        trans1[40].push_back("factor");
        trans1[3].push_back("EQ");
        trans1[74].push_back("EQ");
        trans1[21].push_back("INT");
        trans1[100].push_back("EQ");
        trans1[106].push_back("STAR");
        trans1[86].push_back("STAR");
        trans1[88].push_back("STAR");
        trans1[95].push_back("SEMI");
        trans1[51].push_back("SEMI");
        trans1[118].push_back("NULL");
        trans1[128].push_back("STAR");
        trans1[2].push_back("NULL");
        trans1[108].push_back("GT");
        trans1[57].push_back("RETURN");
        trans1[6].push_back("INT");
        trans1[7].push_back("INT");
        trans1[19].push_back("factor");
        trans1[71].push_back("factor");
        trans1[14].push_back("term");
        trans1[44].push_back("term");
        trans1[17].push_back("term");
        trans1[25].push_back("term");
        trans1[13].push_back("term");
        trans1[9].push_back("term");
        trans1[117].push_back("BECOMES");
        trans1[94].push_back("LPAREN");
        trans1[100].push_back("GT");
        trans1[3].push_back("GT");
        trans1[74].push_back("GT");
        trans1[85].push_back("expr");
        trans1[108].push_back("GE");
        trans1[74].push_back("GE");
        trans1[3].push_back("GE");
        trans1[100].push_back("GE");
        trans1[128].push_back("PRINTLN");
        trans1[108].push_back("EQ");
        trans1[2].push_back("STAR");
        trans1[118].push_back("STAR");
        trans1[106].push_back("NEW");
        trans1[86].push_back("NEW");
        trans1[88].push_back("NEW");
        trans1[123].push_back("RPAREN");
        trans1[108].push_back("LT");
        trans1[23].push_back("procedure");
        trans1[70].push_back("term");
        trans1[31].push_back("PLUS");
        trans1[32].push_back("PLUS");
        trans1[33].push_back("PLUS");
        trans1[34].push_back("PLUS");
        trans1[35].push_back("PLUS");
        trans1[36].push_back("PLUS");
        trans1[94].push_back("WHILE");
        trans1[29].push_back("COMMA");
        trans1[94].push_back("dcls");
        trans1[70].push_back("ID");
        trans1[0].push_back("BOF");
        trans1[5].push_back("NULL");
        trans1[56].push_back("LPAREN");
        trans1[108].push_back("LE");
        trans1[101].push_back("COMMA");
        trans1[121].push_back("SEMI");
        trans1[83].push_back("DELETE");
        trans1[59].push_back("RETURN");
        trans1[57].push_back("WHILE");
        trans1[18].push_back("main");
        trans1[82].push_back("DELETE");
        trans1[127].push_back("STAR");
        trans1[102].push_back("STAR");
        trans1[74].push_back("LE");
        trans1[30].push_back("STAR");
        trans1[8].push_back("STAR");
        trans1[112].push_back("dcl");
        trans1[90].push_back("STAR");
        trans1[93].push_back("STAR");
        trans1[97].push_back("STAR");
        trans1[116].push_back("STAR");
        trans1[73].push_back("NUM");
        trans1[14].push_back("expr");
        trans1[44].push_back("expr");
        trans1[17].push_back("expr");
        trans1[25].push_back("expr");
        trans1[13].push_back("expr");
        trans1[9].push_back("expr");
        trans1[37].push_back("EOF");
        trans1[87].push_back("RBRACE");
        trans1[26].push_back("INT");
        trans1[24].push_back("INT");
        trans1[5].push_back("STAR");
        trans1[59].push_back("STAR");
        trans1[130].push_back("DELETE");
        trans1[68].push_back("DELETE");
        trans1[131].push_back("DELETE");
        trans1[59].push_back("WHILE");
        trans1[11].push_back("LT");
        trans1[61].push_back("LT");
        trans1[60].push_back("LT");
        trans1[129].push_back("LPAREN");
        trans1[121].push_back("PLUS");
        trans1[46].push_back("NEW");
        trans1[52].push_back("NEW");
        trans1[66].push_back("NEW");
        trans1[4].push_back("ID");
        trans1[38].push_back("LPAREN");
        trans1[85].push_back("STAR");
        trans1[18].push_back("procedures");
        trans1[85].push_back("NUM");
        trans1[40].push_back("NULL");
        trans1[61].push_back("RPAREN");
        trans1[60].push_back("RPAREN");
        trans1[11].push_back("RPAREN");
        trans1[59].push_back("ID");
        trans1[59].push_back("IF");
        trans1[57].push_back("RBRACE");
        trans1[61].push_back("NE");
        trans1[60].push_back("NE");
        trans1[11].push_back("NE");
        trans1[77].push_back("IF");
        trans1[76].push_back("IF");
        trans1[115].push_back("STAR");
        trans1[78].push_back("ID");
        trans1[78].push_back("IF");
        trans1[74].push_back("RBRACK");
        trans1[3].push_back("RBRACK");
        trans1[100].push_back("RBRACK");
        trans1[128].push_back("LPAREN");
        trans1[77].push_back("ID");
        trans1[76].push_back("ID");
        trans1[15].push_back("INT");
        trans1[113].push_back("STAR");
        trans1[114].push_back("STAR");
        trans1[20].push_back("type");
        trans1[22].push_back("RPAREN");
        trans1[24].push_back("type");
        trans1[26].push_back("type");
        trans1[129].push_back("WHILE");
        trans1[108].push_back("NE");
        trans1[11].push_back("LE");
        trans1[70].push_back("factor");
        trans1[105].push_back("NEW");
        trans1[104].push_back("NEW");
        trans1[80].push_back("term");
        trans1[80].push_back("expr");
        trans1[113].push_back("LPAREN");
        trans1[114].push_back("LPAREN");
        trans1[117].push_back("RPAREN");
        trans1[115].push_back("LPAREN");
        trans1[61].push_back("LE");
        trans1[60].push_back("LE");
        trans1[63].push_back("BECOMES");
        trans1[90].push_back("PCT");
        trans1[116].push_back("PCT");
        trans1[30].push_back("PCT");
        trans1[8].push_back("PCT");
        trans1[127].push_back("PCT");
        trans1[102].push_back("PCT");
        trans1[93].push_back("PCT");
        trans1[97].push_back("PCT");
        trans1[47].push_back("MINUS");
        trans1[48].push_back("MINUS");
        trans1[49].push_back("MINUS");
        trans1[10].push_back("MINUS");
        trans1[10].push_back("STAR");
        trans1[11].push_back("STAR");
        trans1[61].push_back("STAR");
        trans1[60].push_back("STAR");
        trans1[70].push_back("LPAREN");
        trans1[46].push_back("factor");
        trans1[52].push_back("factor");
        trans1[66].push_back("factor");
        trans1[14].push_back("STAR");
        trans1[44].push_back("STAR");
        trans1[17].push_back("STAR");
        trans1[25].push_back("STAR");
        trans1[13].push_back("STAR");
        trans1[9].push_back("STAR");
        trans1[80].push_back("arglist");
        trans1[12].push_back("RPAREN");
        trans1[19].push_back("NEW");
        trans1[71].push_back("NEW");
        trans1[45].push_back("NUM");
        trans1[61].push_back("GE");
        trans1[60].push_back("GE");
        trans1[11].push_back("GE");
        trans1[10].push_back("RBRACK");
        trans1[47].push_back("RBRACK");
        trans1[48].push_back("RBRACK");
        trans1[49].push_back("RBRACK");
        trans1[90].push_back("COMMA");
        trans1[116].push_back("COMMA");
        trans1[61].push_back("GT");
        trans1[60].push_back("GT");
        trans1[11].push_back("SLASH");
        trans1[11].push_back("GT");
        trans1[61].push_back("SLASH");
        trans1[60].push_back("SLASH");
        trans1[30].push_back("COMMA");
        trans1[8].push_back("COMMA");
        trans1[127].push_back("COMMA");
        trans1[102].push_back("COMMA");
        trans1[47].push_back("STAR");
        trans1[48].push_back("STAR");
        trans1[49].push_back("STAR");
        trans1[80].push_back("ID");
        trans1[93].push_back("COMMA");
        trans1[97].push_back("COMMA");
        trans1[70].push_back("NULL");
        trans1[59].push_back("RBRACE");
        trans1[46].push_back("AMP");
        trans1[52].push_back("AMP");
        trans1[66].push_back("AMP");
        trans1[23].push_back("main");
        trans1[94].push_back("ID");
        trans1[78].push_back("RBRACE");
        trans1[94].push_back("IF");
        trans1[94].push_back("PRINTLN");
        trans1[23].push_back("INT");
        trans1[5].push_back("ID");
        trans1[46].push_back("STAR");
        trans1[52].push_back("STAR");
        trans1[66].push_back("STAR");
        trans1[113].push_back("DELETE");
        trans1[114].push_back("DELETE");
        trans1[116].push_back("SLASH");
        trans1[129].push_back("STAR");
        trans1[90].push_back("SLASH");
        trans1[112].push_back("RPAREN");
        trans1[54].push_back("WAIN");
        trans1[127].push_back("SLASH");
        trans1[102].push_back("SLASH");
        trans1[93].push_back("SLASH");
        trans1[97].push_back("SLASH");
        trans1[30].push_back("SLASH");
        trans1[8].push_back("SLASH");
        trans1[19].push_back("STAR");
        trans1[71].push_back("STAR");
        trans1[118].push_back("NUM");
        trans1[109].push_back("statement");
        trans1[2].push_back("NUM");
        trans1[73].push_back("LPAREN");
        trans1[53].push_back("LPAREN");
        trans1[47].push_back("COMMA");
        trans1[48].push_back("COMMA");
        trans1[49].push_back("COMMA");
        trans1[14].push_back("factor");
        trans1[44].push_back("factor");
        trans1[17].push_back("factor");
        trans1[25].push_back("factor");
        trans1[13].push_back("factor");
        trans1[9].push_back("factor");
        trans1[10].push_back("COMMA");
        trans1[100].push_back("STAR");
        trans1[3].push_back("STAR");
        trans1[74].push_back("STAR");
        trans1[115].push_back("DELETE");
        trans1[109].push_back("PRINTLN");
        trans1[78].push_back("WHILE");
        trans1[77].push_back("RBRACE");
        trans1[76].push_back("RBRACE");
        trans1[113].push_back("statement");
        trans1[114].push_back("statement");
        trans1[22].push_back("PLUS");
        trans1[115].push_back("statement");
        trans1[105].push_back("AMP");
        trans1[104].push_back("AMP");
        trans1[77].push_back("WHILE");
        trans1[76].push_back("WHILE");
        trans1[128].push_back("dcls");
        trans1[118].push_back("term");
        trans1[2].push_back("term");
        trans1[19].push_back("term");
        trans1[71].push_back("term");
        trans1[128].push_back("WHILE");
        trans1[19].push_back("LPAREN");
        trans1[71].push_back("LPAREN");
        trans1[128].push_back("RETURN");
        trans1[57].push_back("ID");
        trans1[57].push_back("IF");
        trans1[23].push_back("procedures");
        trans1[2].push_back("LPAREN");
        trans1[118].push_back("LPAREN");
        trans1[21].push_back("dcl");
        trans1[19].push_back("NULL");
        trans1[71].push_back("NULL");
        trans1[78].push_back("PRINTLN");
        trans1[77].push_back("PRINTLN");
        trans1[76].push_back("PRINTLN");
        trans1[2].push_back("expr");
        trans1[118].push_back("expr");
        trans1[11].push_back("PCT");
        trans1[21].push_back("ID");
        trans1[21].push_back("IF");
        trans1[6].push_back("LPAREN");
        trans1[7].push_back("LPAREN");
        trans1[113].push_back("lvalue");
        trans1[114].push_back("lvalue");
        trans1[14].push_back("NULL");
        trans1[44].push_back("NULL");
        trans1[17].push_back("NULL");
        trans1[25].push_back("NULL");
        trans1[13].push_back("NULL");
        trans1[9].push_back("NULL");
        trans1[118].push_back("AMP");
        trans1[115].push_back("lvalue");
        trans1[2].push_back("AMP");
        trans1[16].push_back("SEMI");
        trans1[80].push_back("factor");
        trans1[94].push_back("INT");
        trans1[5].push_back("NEW");
        trans1[73].push_back("STAR");
        trans1[57].push_back("PRINTLN");
        trans1[80].push_back("NEW");
        trans1[74].push_back("LT");
        trans1[3].push_back("LT");
        trans1[46].push_back("NUM");
        trans1[52].push_back("NUM");
        trans1[66].push_back("NUM");
        trans1[10].push_back("PCT");
        trans1[3].push_back("LE");
        trans1[100].push_back("LE");
        trans1[85].push_back("NEW");
        trans1[21].push_back("WHILE");
        trans1[47].push_back("PCT");
        trans1[48].push_back("PCT");
        trans1[49].push_back("PCT");
        trans1[100].push_back("LT");
        trans1[21].push_back("RBRACE");
        trans1[22].push_back("COMMA");
        trans1[129].push_back("PRINTLN");
        trans1[22].push_back("SEMI");
        trans1[100].push_back("NE");
        trans1[3].push_back("NE");
        trans1[74].push_back("NE");
        trans1[40].push_back("AMP");
        trans1[14].push_back("ID");
        trans1[44].push_back("ID");
        trans1[17].push_back("ID");
        trans1[25].push_back("ID");
        trans1[13].push_back("ID");
        trans1[9].push_back("ID");
        trans1[94].push_back("RETURN");
        trans1[46].push_back("NULL");
        trans1[52].push_back("NULL");
        trans1[66].push_back("NULL");
        trans1[19].push_back("AMP");
        trans1[71].push_back("AMP");
        trans1[118].push_back("ID");
        trans1[2].push_back("ID");
        trans1[54].push_back("ID");
        trans1[80].push_back("NULL");
        trans1[129].push_back("RETURN");
        trans1[61].push_back("PLUS");
        trans1[60].push_back("PLUS");
        trans1[11].push_back("PLUS");
        trans1[59].push_back("DELETE");
        trans1[22].push_back("PCT");
        trans1[31].push_back("MINUS");
        trans1[32].push_back("MINUS");
        trans1[33].push_back("MINUS");
        trans1[34].push_back("MINUS");
        trans1[35].push_back("MINUS");
        trans1[36].push_back("MINUS");
        trans1[105].push_back("NUM");
        trans1[104].push_back("NUM");
        trans1[85].push_back("arglist");
        trans1[22].push_back("RBRACK");
        trans1[6].push_back("DELETE");
        trans1[7].push_back("DELETE");
        trans1[109].push_back("RETURN");
        trans1[88].push_back("LPAREN");
        trans1[12].push_back("PLUS");
        trans1[53].push_back("ID");
        trans1[105].push_back("LPAREN");
        trans1[104].push_back("LPAREN");
        trans1[106].push_back("LPAREN");
        trans1[86].push_back("LPAREN");
        trans1[22].push_back("MINUS");
        trans1[90].push_back("BECOMES");
        trans1[93].push_back("BECOMES");
        trans1[97].push_back("BECOMES");
        trans1[127].push_back("BECOMES");
        trans1[102].push_back("BECOMES");
        trans1[30].push_back("BECOMES");
        trans1[8].push_back("BECOMES");
        trans1[70].push_back("NUM");
        trans1[116].push_back("BECOMES");
        trans1[19].push_back("NUM");
        trans1[71].push_back("NUM");
        trans1[73].push_back("expr");
        trans1[94].push_back("STAR");
        trans1[126].push_back("LBRACE");
        trans1[125].push_back("LBRACE");
        trans1[100].push_back("SLASH");
        trans1[3].push_back("SLASH");
        trans1[96].push_back("LBRACE");
        trans1[74].push_back("SLASH");
        trans1[55].push_back("LBRACK");
        trans1[40].push_back("STAR");
        trans1[128].push_back("INT");
        trans1[2].push_back("NEW");
        trans1[22].push_back("LPAREN");
        trans1[127].push_back("NE");
        trans1[102].push_back("NE");
        trans1[93].push_back("NE");
        trans1[97].push_back("NE");
        trans1[90].push_back("NE");
        trans1[116].push_back("NE");
        trans1[116].push_back("MINUS");
        trans1[38].push_back("STAR");
        trans1[78].push_back("RETURN");
        trans1[112].push_back("INT");
        trans1[30].push_back("NE");
        trans1[8].push_back("NE");
        trans1[30].push_back("MINUS");
        trans1[8].push_back("MINUS");
        trans1[118].push_back("NEW");
        trans1[127].push_back("MINUS");
        trans1[102].push_back("MINUS");
        trans1[93].push_back("MINUS");
        trans1[97].push_back("MINUS");
        trans1[90].push_back("MINUS");
        trans1[77].push_back("RETURN");
        trans1[76].push_back("RETURN");
        trans1[39].push_back("EOF");
        trans1[6].push_back("WHILE");
        trans1[7].push_back("WHILE");
        trans1[28].push_back("EOF");
        trans1[59].push_back("PRINTLN");
        trans1[113].push_back("RBRACE");
        trans1[114].push_back("RBRACE");
        trans1[127].push_back("RBRACK");
        trans1[102].push_back("RBRACK");
        trans1[93].push_back("RBRACK");
        trans1[97].push_back("RBRACK");
        trans1[109].push_back("lvalue");
        trans1[90].push_back("RBRACK");
        trans1[116].push_back("RBRACK");
        trans1[115].push_back("RBRACE");
        trans1[30].push_back("RBRACK");
        trans1[8].push_back("RBRACK");
        trans1[21].push_back("PRINTLN");
        trans1[14].push_back("LPAREN");
        trans1[44].push_back("LPAREN");
        trans1[17].push_back("LPAREN");
        trans1[25].push_back("LPAREN");
        trans1[13].push_back("LPAREN");
        trans1[9].push_back("LPAREN");
        trans1[112].push_back("params");
        trans1[12].push_back("COMMA");
        trans1[75].push_back("MINUS");
        trans1[22].push_back("SLASH");
        trans1[103].push_back("RPAREN");
        trans1[5].push_back("NUM");
        trans1[67].push_back("BECOMES");
        trans1[11].push_back("RBRACK");
        trans1[61].push_back("COMMA");
        trans1[60].push_back("COMMA");
        trans1[61].push_back("RBRACK");
        trans1[60].push_back("RBRACK");
        trans1[11].push_back("COMMA");
        trans1[74].push_back("PCT");
        trans1[3].push_back("PCT");
        trans1[100].push_back("PCT");
        trans1[75].push_back("PLUS");
        trans1[5].push_back("LPAREN");
        trans1[112].push_back("type");
        trans1[85].push_back("ID");
        trans1[3].push_back("BECOMES");
        trans1[74].push_back("BECOMES");
        trans1[100].push_back("BECOMES");
        trans1[85].push_back("term");
        trans1[116].push_back("SEMI");
        trans1[64].push_back("MINUS");
        trans1[93].push_back("SEMI");
        trans1[97].push_back("SEMI");
        trans1[65].push_back("MINUS");
        trans1[90].push_back("SEMI");
        trans1[80].push_back("LPAREN");
        trans1[75].push_back("SEMI");
        trans1[130].push_back("RBRACE");
        trans1[68].push_back("RBRACE");
        trans1[131].push_back("RBRACE");
        trans1[14].push_back("AMP");
        trans1[44].push_back("AMP");
        trans1[17].push_back("AMP");
        trans1[25].push_back("AMP");
        trans1[13].push_back("AMP");
        trans1[9].push_back("AMP");
        trans1[82].push_back("RBRACE");
        trans1[79].push_back("RBRACK");
        trans1[127].push_back("SEMI");
        trans1[102].push_back("SEMI");
        trans1[30].push_back("SEMI");
        trans1[8].push_back("SEMI");
        trans1[83].push_back("RBRACE");
        trans1[68].push_back("PRINTLN");
        trans1[131].push_back("PRINTLN");
        trans1[130].push_back("PRINTLN");
        trans1[47].push_back("PLUS");
        trans1[48].push_back("PLUS");
        trans1[49].push_back("PLUS");
        trans1[82].push_back("PRINTLN");
        trans1[10].push_back("PLUS");
        trans1[109].push_back("WHILE");
        trans1[83].push_back("PRINTLN");
        trans1[65].push_back("PLUS");
        trans1[64].push_back("PLUS");
        trans1[77].push_back("STAR");
        trans1[76].push_back("STAR");
        trans1[10].push_back("SEMI");
        trans1[78].push_back("STAR");
        trans1[73].push_back("NULL");
        trans1[46].push_back("LPAREN");
        trans1[52].push_back("LPAREN");
        trans1[66].push_back("LPAREN");
        trans1[4].push_back("STAR");
        trans1[47].push_back("SEMI");
        trans1[48].push_back("SEMI");
        trans1[49].push_back("SEMI");
        trans1[116].push_back("RPAREN");
        trans1[40].push_back("NUM");
        trans1[30].push_back("RPAREN");
        trans1[8].push_back("RPAREN");
        trans1[127].push_back("RPAREN");
        trans1[102].push_back("RPAREN");
        trans1[50].push_back("RPAREN");
        trans1[93].push_back("RPAREN");
        trans1[97].push_back("RPAREN");
        trans1[105].push_back("NULL");
        trans1[104].push_back("NULL");
        trans1[90].push_back("RPAREN");
        trans1[109].push_back("DELETE");
        trans1[18].push_back("procedure");
        trans1[100].push_back("PLUS");
        trans1[74].push_back("PLUS");
        trans1[3].push_back("PLUS");
        trans1[85].push_back("factor");
        trans1[10].push_back("NE");
        trans1[47].push_back("NE");
        trans1[48].push_back("NE");
        trans1[49].push_back("NE");
        trans1[94].push_back("DELETE");
        trans1[116].push_back("EQ");
        trans1[100].push_back("COMMA");
        trans1[30].push_back("GT");
        trans1[8].push_back("GT");
        trans1[3].push_back("COMMA");
        trans1[93].push_back("GT");
        trans1[97].push_back("GT");
        trans1[127].push_back("GT");
        trans1[102].push_back("GT");
        trans1[1].push_back("RPAREN");
        trans1[74].push_back("COMMA");
        trans1[27].push_back("RBRACE");
        trans1[90].push_back("GE");
        trans1[93].push_back("GE");
        trans1[97].push_back("GE");
        trans1[116].push_back("GE");
        trans1[83].push_back("WHILE");
        trans1[30].push_back("GE");
        trans1[8].push_back("GE");
        trans1[127].push_back("GE");
        trans1[102].push_back("GE");
        trans1[21].push_back("LPAREN");
        trans1[6].push_back("STAR");
        trans1[7].push_back("STAR");
        trans1[82].push_back("WHILE");
        trans1[68].push_back("WHILE");
        trans1[131].push_back("WHILE");
        trans1[130].push_back("WHILE");
        trans1[61].push_back("PCT");
        trans1[60].push_back("PCT");
        trans1[80].push_back("NUM");
        trans1[20].push_back("dcl");
        trans1[99].push_back("RPAREN");
        trans1[128].push_back("ID");
        trans1[57].push_back("LPAREN");
        trans1[80].push_back("RPAREN");
        trans1[92].push_back("LBRACE");
        trans1[14].push_back("NUM");
        trans1[44].push_back("NUM");
        trans1[17].push_back("NUM");
        trans1[25].push_back("NUM");
        trans1[13].push_back("NUM");
        trans1[9].push_back("NUM");
        trans1[90].push_back("GT");
        trans1[116].push_back("GT");
        trans1[45].push_back("NULL");
        trans1[128].push_back("IF");
        trans1[81].push_back("ELSE");
        trans1[57].push_back("DELETE");
        trans1[64].push_back("RPAREN");
        trans1[73].push_back("AMP");
        trans1[62].push_back("EOF");
        trans1[21].push_back("STAR");
        trans1[118].push_back("factor");
        trans1[105].push_back("factor");
        trans1[104].push_back("factor");
        trans1[2].push_back("factor");
        trans1[29].push_back("RPAREN");
        trans1[100].push_back("RPAREN");
        trans1[105].push_back("ID");
        trans1[104].push_back("ID");
        trans1[82].push_back("LPAREN");
        trans1[20].push_back("INT");
        trans1[88].push_back("factor");
        trans1[130].push_back("LPAREN");
        trans1[106].push_back("factor");
        trans1[86].push_back("factor");
        trans1[68].push_back("LPAREN");
        trans1[131].push_back("LPAREN");
        trans1[26].push_back("dcl");
        trans1[19].push_back("ID");
        trans1[71].push_back("ID");
        trans1[74].push_back("RPAREN");
        trans1[111].push_back("RPAREN");
        trans1[3].push_back("RPAREN");
        trans1[83].push_back("LPAREN");
        trans1[24].push_back("dcl");
        trans1[5].push_back("factor");
        trans1[20].push_back("paramlist");
        trans1[107].push_back("LPAREN");
        trans1[43].push_back("LPAREN");
        trans1[58].push_back("LPAREN");
        trans1[12].push_back("MINUS");
        trans1[11].push_back("MINUS");
        trans1[61].push_back("MINUS");
        trans1[60].push_back("MINUS");
        trans1[59].push_back("INT");
        trans1[93].push_back("LT");
        trans1[97].push_back("LT");
        trans1[90].push_back("LT");
        trans1[30].push_back("LT");
        trans1[8].push_back("LT");
        trans1[127].push_back("LT");
        trans1[102].push_back("LT");
        trans1[91].push_back("INT");
        trans1[116].push_back("LT");
        trans1[93].push_back("LE");
        trans1[97].push_back("LE");
        trans1[108].push_back("PLUS");
        trans1[127].push_back("LE");
        trans1[102].push_back("LE");
        trans1[30].push_back("LE");
        trans1[8].push_back("LE");
        trans1[129].push_back("ID");
        trans1[116].push_back("LE");
        trans1[129].push_back("IF");
        trans1[90].push_back("LE");
        trans1[46].push_back("ID");
        trans1[52].push_back("ID");
        trans1[66].push_back("ID");
        trans1[70].push_back("NEW");
        trans1[88].push_back("NULL");
        trans1[106].push_back("NULL");
        trans1[86].push_back("NULL");
        trans1[10].push_back("EQ");
        trans1[47].push_back("EQ");
        trans1[48].push_back("EQ");
        trans1[49].push_back("EQ");
        trans1[80].push_back("STAR");
        trans1[6].push_back("PRINTLN");
        trans1[7].push_back("PRINTLN");
        trans1[22].push_back("LT");
        trans1[59].push_back("LPAREN");
        trans1[59].push_back("type");
        trans1[73].push_back("NEW");
        trans1[22].push_back("LE");
        trans1[109].push_back("STAR");
        trans1[105].push_back("expr");
        trans1[104].push_back("expr");
        trans1[93].push_back("PLUS");
        trans1[97].push_back("PLUS");
        trans1[90].push_back("PLUS");
        trans1[116].push_back("PLUS");
        trans1[30].push_back("PLUS");
        trans1[8].push_back("PLUS");
        trans1[127].push_back("PLUS");
        trans1[102].push_back("PLUS");
        trans1[10].push_back("GT");
        trans1[47].push_back("GT");
        trans1[48].push_back("GT");
        trans1[49].push_back("GT");
        trans1[109].push_back("IF");
        trans1[109].push_back("ID");
        trans1[80].push_back("AMP");
        trans1[108].push_back("MINUS");
        trans1[10].push_back("GE");
        trans1[47].push_back("GE");
        trans1[48].push_back("GE");
        trans1[49].push_back("GE");
        trans1[21].push_back("statements");
        trans1[109].push_back("LPAREN");
        trans1[59].push_back("dcl");
        trans1[128].push_back("DELETE");
        trans1[40].push_back("ID");
        trans1[84].push_back("RPAREN");
        trans1[88].push_back("NUM");
        trans1[106].push_back("NUM");
        trans1[86].push_back("NUM");
        trans1[40].push_back("LPAREN");
        trans1[38].push_back("lvalue");
        trans1[22].push_back("BECOMES");
        trans1[40].push_back("NEW");
        trans1[69].push_back("LPAREN");
        trans1[77].push_back("statements");
        trans1[76].push_back("statements");
        trans1[73].push_back("term");
        trans1[78].push_back("statements");
        trans1[53].push_back("STAR");
        trans1[57].push_back("STAR");
        trans1[93].push_back("EQ");
        trans1[97].push_back("EQ");
        trans1[90].push_back("EQ");
        trans1[30].push_back("EQ");
        trans1[8].push_back("EQ");
        trans1[127].push_back("EQ");
        trans1[102].push_back("EQ");
        trans1[85].push_back("AMP");
        trans1[47].push_back("LT");
        trans1[48].push_back("LT");
        trans1[49].push_back("LT");
        trans1[10].push_back("LT");
        trans1[117].push_back("COMMA");
        trans1[18].push_back("INT");
        trans1[83].push_back("RETURN");
        trans1[10].push_back("LE");
        trans1[3].push_back("MINUS");
        trans1[129].push_back("statement");
        trans1[74].push_back("MINUS");
        trans1[22].push_back("NE");
        trans1[10].push_back("RPAREN");
        trans1[100].push_back("MINUS");
        trans1[47].push_back("LE");
        trans1[48].push_back("LE");
        trans1[49].push_back("LE");
        trans1[106].push_back("term");
        trans1[86].push_back("term");
        trans1[130].push_back("RETURN");
        trans1[47].push_back("RPAREN");
        trans1[48].push_back("RPAREN");
        trans1[49].push_back("RPAREN");
        trans1[70].push_back("AMP");
        trans1[88].push_back("term");
        trans1[68].push_back("RETURN");
        trans1[131].push_back("RETURN");
        trans1[82].push_back("RETURN");
        trans1[105].push_back("term");
        trans1[104].push_back("term");
        trans1[82].push_back("STAR");
        trans1[22].push_back("STAR");
        trans1[83].push_back("STAR");
        trans1[77].push_back("LPAREN");
        trans1[76].push_back("LPAREN");
        trans1[65].push_back("RBRACK");
        trans1[70].push_back("STAR");
        trans1[68].push_back("STAR");
        trans1[131].push_back("STAR");
        trans1[78].push_back("LPAREN");
        trans1[130].push_back("STAR");
        trans1[129].push_back("DELETE");
        trans1[121].push_back("MINUS");
        trans1[78].push_back("DELETE");
        trans1[42].push_back("ID");
        trans1[77].push_back("DELETE");
        trans1[76].push_back("DELETE");
        trans1[113].push_back("ID");
        trans1[114].push_back("ID");
        trans1[113].push_back("IF");
        trans1[114].push_back("IF");
        trans1[115].push_back("ID");
        trans1[115].push_back("IF");
        trans1[38].push_back("ID");
        trans1[123].push_back("PLUS");
        trans1[124].push_back("PLUS");
        trans1[122].push_back("PLUS");
        trans1[47].push_back("SLASH");
        trans1[48].push_back("SLASH");
        trans1[49].push_back("SLASH");
        trans1[10].push_back("SLASH");
        trans1[41].push_back("LBRACK");
        trans1[14].push_back("NEW");
        trans1[44].push_back("NEW");
        trans1[17].push_back("NEW");
        trans1[25].push_back("NEW");
        trans1[13].push_back("NEW");
        trans1[9].push_back("NEW");
        trans1[105].push_back("STAR");
        trans1[104].push_back("STAR");
        trans1[105].push_back("test");
        trans1[104].push_back("test");
        trans1[5].push_back("AMP");
        trans1[122].push_back("MINUS");
        trans1[123].push_back("MINUS");
        trans1[124].push_back("MINUS");
        trans1[70].push_back("expr");
        trans1[100].push_back("SEMI");
        trans1[73].push_back("ID");
        trans1[3].push_back("SEMI");
        trans1[74].push_back("SEMI");
        trans1[113].push_back("WHILE");
        trans1[114].push_back("WHILE");
        trans1[88].push_back("ID");
        trans1[106].push_back("ID");
        trans1[86].push_back("ID");
        trans1[22].push_back("GE");
        trans1[115].push_back("WHILE");
        trans1[88].push_back("expr");
        trans1[106].push_back("expr");
        trans1[86].push_back("expr");
        trans1[120].push_back("RPAREN");
        trans1[119].push_back("RPAREN");
        trans1[22].push_back("GT");
        trans1[129].push_back("lvalue");
        trans1[11].push_back("SEMI");
        trans1[6].push_back("IF");
        trans1[7].push_back("IF");
        trans1[61].push_back("SEMI");
        trans1[60].push_back("SEMI");
        trans1[53].push_back("lvalue");
        trans1[6].push_back("ID");
        trans1[7].push_back("ID");
        trans1[88].push_back("AMP");
        trans1[89].push_back("ID");
        trans1[110].push_back("LBRACE");
        trans1[106].push_back("AMP");
        trans1[86].push_back("AMP");
        trans1[83].push_back("IF");
        trans1[83].push_back("ID");
        trans1[82].push_back("IF");
        trans1[130].push_back("IF");
        trans1[82].push_back("ID");
        trans1[68].push_back("IF");
        trans1[131].push_back("IF");
        trans1[31].push_back("RPAREN");
        trans1[32].push_back("RPAREN");
        trans1[33].push_back("RPAREN");
        trans1[34].push_back("RPAREN");
        trans1[35].push_back("RPAREN");
        trans1[36].push_back("RPAREN");
        trans1[21].push_back("type");
        trans1[6].push_back("RETURN");
        trans1[7].push_back("RETURN");
        trans1[59].push_back("statements");
        trans1[68].push_back("ID");
        trans1[131].push_back("ID");
        trans1[130].push_back("ID");
        trans1[22].push_back("EQ");
        trans1[11].push_back("EQ");
        trans1[73].push_back("factor");
        trans1[61].push_back("EQ");
        trans1[60].push_back("EQ");
        trans1[85].push_back("NULL");
        trans1[115].push_back("PRINTLN");
        trans1[124].push_back("SEMI");
        trans1[122].push_back("SEMI");
        trans1[21].push_back("RETURN");
        trans1[113].push_back("PRINTLN");
        trans1[114].push_back("PRINTLN");
        trans1[21].push_back("DELETE");
        trans2[72].push_back(-45);
        trans2[112].push_back(1);
        trans2[85].push_back(2);
        trans2[40].push_back(3);
        trans2[3].push_back(-47);
        trans2[74].push_back(-46);
        trans2[21].push_back(4);
        trans2[100].push_back(-48);
        trans2[106].push_back(5);
        trans2[86].push_back(5);
        trans2[88].push_back(5);
        trans2[95].push_back(6);
        trans2[51].push_back(7);
        trans2[118].push_back(8);
        trans2[128].push_back(-11);
        trans2[2].push_back(8);
        trans2[108].push_back(9);
        trans2[57].push_back(-16);
        trans2[6].push_back(-13);
        trans2[7].push_back(-12);
        trans2[19].push_back(10);
        trans2[71].push_back(10);
        trans2[14].push_back(11);
        trans2[44].push_back(11);
        trans2[17].push_back(11);
        trans2[25].push_back(11);
        trans2[13].push_back(11);
        trans2[9].push_back(11);
        trans2[117].push_back(-14);
        trans2[94].push_back(-11);
        trans2[100].push_back(-48);
        trans2[3].push_back(-47);
        trans2[74].push_back(-46);
        trans2[85].push_back(12);
        trans2[108].push_back(13);
        trans2[74].push_back(-46);
        trans2[3].push_back(-47);
        trans2[100].push_back(-48);
        trans2[128].push_back(-11);
        trans2[108].push_back(14);
        trans2[2].push_back(5);
        trans2[118].push_back(5);
        trans2[106].push_back(15);
        trans2[86].push_back(15);
        trans2[88].push_back(15);
        trans2[123].push_back(16);
        trans2[108].push_back(17);
        trans2[23].push_back(18);
        trans2[70].push_back(11);
        trans2[31].push_back(19);
        trans2[32].push_back(19);
        trans2[33].push_back(19);
        trans2[34].push_back(19);
        trans2[35].push_back(19);
        trans2[36].push_back(19);
        trans2[94].push_back(-11);
        trans2[29].push_back(20);
        trans2[94].push_back(21);
        trans2[70].push_back(22);
        trans2[0].push_back(23);
        trans2[5].push_back(8);
        trans2[56].push_back(24);
        trans2[108].push_back(25);
        trans2[101].push_back(26);
        trans2[121].push_back(27);
        trans2[83].push_back(-18);
        trans2[59].push_back(-15);
        trans2[57].push_back(-16);
        trans2[18].push_back(28);
        trans2[82].push_back(-19);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[74].push_back(-46);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[112].push_back(29);
        trans2[90].push_back(-43);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[116].push_back(-41);
        trans2[73].push_back(30);
        trans2[14].push_back(31);
        trans2[44].push_back(32);
        trans2[17].push_back(33);
        trans2[25].push_back(34);
        trans2[13].push_back(35);
        trans2[9].push_back(36);
        trans2[37].push_back(-4);
        trans2[87].push_back(37);
        trans2[26].push_back(4);
        trans2[24].push_back(4);
        trans2[5].push_back(5);
        trans2[59].push_back(-15);
        trans2[130].push_back(-17);
        trans2[68].push_back(-20);
        trans2[131].push_back(-21);
        trans2[59].push_back(-15);
        trans2[11].push_back(-28);
        trans2[61].push_back(-30);
        trans2[60].push_back(-29);
        trans2[129].push_back(38);
        trans2[121].push_back(19);
        trans2[46].push_back(15);
        trans2[52].push_back(15);
        trans2[66].push_back(15);
        trans2[4].push_back(-9);
        trans2[38].push_back(38);
        trans2[85].push_back(5);
        trans2[18].push_back(39);
        trans2[85].push_back(30);
        trans2[40].push_back(8);
        trans2[61].push_back(-30);
        trans2[60].push_back(-29);
        trans2[11].push_back(-28);
        trans2[59].push_back(-15);
        trans2[59].push_back(-15);
        trans2[57].push_back(-16);
        trans2[61].push_back(-30);
        trans2[60].push_back(-29);
        trans2[11].push_back(-28);
        trans2[77].push_back(-15);
        trans2[76].push_back(-15);
        trans2[115].push_back(40);
        trans2[78].push_back(-15);
        trans2[78].push_back(-15);
        trans2[74].push_back(-46);
        trans2[3].push_back(-47);
        trans2[100].push_back(-48);
        trans2[128].push_back(-11);
        trans2[77].push_back(-15);
        trans2[76].push_back(-15);
        trans2[15].push_back(41);
        trans2[113].push_back(40);
        trans2[114].push_back(40);
        trans2[20].push_back(42);
        trans2[22].push_back(-35);
        trans2[24].push_back(42);
        trans2[26].push_back(42);
        trans2[129].push_back(43);
        trans2[108].push_back(44);
        trans2[11].push_back(-28);
        trans2[70].push_back(10);
        trans2[105].push_back(15);
        trans2[104].push_back(15);
        trans2[80].push_back(11);
        trans2[80].push_back(12);
        trans2[113].push_back(38);
        trans2[114].push_back(38);
        trans2[117].push_back(-14);
        trans2[115].push_back(38);
        trans2[61].push_back(-30);
        trans2[60].push_back(-29);
        trans2[63].push_back(45);
        trans2[90].push_back(-43);
        trans2[116].push_back(-41);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[10].push_back(-31);
        trans2[10].push_back(-31);
        trans2[11].push_back(46);
        trans2[61].push_back(46);
        trans2[60].push_back(46);
        trans2[70].push_back(2);
        trans2[46].push_back(47);
        trans2[52].push_back(48);
        trans2[66].push_back(49);
        trans2[14].push_back(5);
        trans2[44].push_back(5);
        trans2[17].push_back(5);
        trans2[25].push_back(5);
        trans2[13].push_back(5);
        trans2[9].push_back(5);
        trans2[80].push_back(50);
        trans2[12].push_back(-44);
        trans2[19].push_back(15);
        trans2[71].push_back(15);
        trans2[45].push_back(51);
        trans2[61].push_back(-30);
        trans2[60].push_back(-29);
        trans2[11].push_back(-28);
        trans2[10].push_back(-31);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[90].push_back(-43);
        trans2[116].push_back(-41);
        trans2[61].push_back(-30);
        trans2[60].push_back(-29);
        trans2[11].push_back(52);
        trans2[11].push_back(-28);
        trans2[61].push_back(52);
        trans2[60].push_back(52);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[80].push_back(22);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[70].push_back(8);
        trans2[59].push_back(-15);
        trans2[46].push_back(53);
        trans2[52].push_back(53);
        trans2[66].push_back(53);
        trans2[23].push_back(28);
        trans2[94].push_back(-11);
        trans2[78].push_back(-15);
        trans2[94].push_back(-11);
        trans2[94].push_back(-11);
        trans2[23].push_back(54);
        trans2[5].push_back(22);
        trans2[46].push_back(5);
        trans2[52].push_back(5);
        trans2[66].push_back(5);
        trans2[113].push_back(55);
        trans2[114].push_back(55);
        trans2[116].push_back(-41);
        trans2[129].push_back(40);
        trans2[90].push_back(-43);
        trans2[112].push_back(-5);
        trans2[54].push_back(56);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[19].push_back(5);
        trans2[71].push_back(5);
        trans2[118].push_back(30);
        trans2[109].push_back(57);
        trans2[2].push_back(30);
        trans2[73].push_back(2);
        trans2[53].push_back(38);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[14].push_back(10);
        trans2[44].push_back(10);
        trans2[17].push_back(10);
        trans2[25].push_back(10);
        trans2[13].push_back(10);
        trans2[9].push_back(10);
        trans2[10].push_back(-31);
        trans2[100].push_back(-48);
        trans2[3].push_back(-47);
        trans2[74].push_back(-46);
        trans2[115].push_back(55);
        trans2[109].push_back(58);
        trans2[78].push_back(-15);
        trans2[77].push_back(-15);
        trans2[76].push_back(-15);
        trans2[113].push_back(57);
        trans2[114].push_back(57);
        trans2[22].push_back(-35);
        trans2[115].push_back(57);
        trans2[105].push_back(53);
        trans2[104].push_back(53);
        trans2[77].push_back(-15);
        trans2[76].push_back(-15);
        trans2[128].push_back(59);
        trans2[118].push_back(11);
        trans2[2].push_back(11);
        trans2[19].push_back(60);
        trans2[71].push_back(61);
        trans2[128].push_back(-11);
        trans2[19].push_back(2);
        trans2[71].push_back(2);
        trans2[128].push_back(-11);
        trans2[57].push_back(-16);
        trans2[57].push_back(-16);
        trans2[23].push_back(62);
        trans2[2].push_back(2);
        trans2[118].push_back(2);
        trans2[21].push_back(63);
        trans2[19].push_back(8);
        trans2[71].push_back(8);
        trans2[78].push_back(-15);
        trans2[77].push_back(-15);
        trans2[76].push_back(-15);
        trans2[2].push_back(64);
        trans2[118].push_back(65);
        trans2[11].push_back(66);
        trans2[21].push_back(-15);
        trans2[21].push_back(-15);
        trans2[6].push_back(-13);
        trans2[7].push_back(-12);
        trans2[113].push_back(67);
        trans2[114].push_back(67);
        trans2[14].push_back(8);
        trans2[44].push_back(8);
        trans2[17].push_back(8);
        trans2[25].push_back(8);
        trans2[13].push_back(8);
        trans2[9].push_back(8);
        trans2[118].push_back(53);
        trans2[115].push_back(67);
        trans2[2].push_back(53);
        trans2[16].push_back(68);
        trans2[80].push_back(10);
        trans2[94].push_back(-11);
        trans2[5].push_back(15);
        trans2[73].push_back(5);
        trans2[57].push_back(-16);
        trans2[80].push_back(15);
        trans2[74].push_back(-46);
        trans2[3].push_back(-47);
        trans2[46].push_back(30);
        trans2[52].push_back(30);
        trans2[66].push_back(30);
        trans2[10].push_back(-31);
        trans2[3].push_back(-47);
        trans2[100].push_back(-48);
        trans2[85].push_back(15);
        trans2[21].push_back(-15);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[100].push_back(-48);
        trans2[21].push_back(-15);
        trans2[22].push_back(-35);
        trans2[129].push_back(58);
        trans2[22].push_back(-35);
        trans2[100].push_back(-48);
        trans2[3].push_back(-47);
        trans2[74].push_back(-46);
        trans2[40].push_back(53);
        trans2[14].push_back(22);
        trans2[44].push_back(22);
        trans2[17].push_back(22);
        trans2[25].push_back(22);
        trans2[13].push_back(22);
        trans2[9].push_back(22);
        trans2[94].push_back(-11);
        trans2[46].push_back(8);
        trans2[52].push_back(8);
        trans2[66].push_back(8);
        trans2[19].push_back(53);
        trans2[71].push_back(53);
        trans2[118].push_back(22);
        trans2[2].push_back(22);
        trans2[54].push_back(69);
        trans2[80].push_back(8);
        trans2[129].push_back(70);
        trans2[61].push_back(-30);
        trans2[60].push_back(-29);
        trans2[11].push_back(-28);
        trans2[59].push_back(-15);
        trans2[22].push_back(-35);
        trans2[31].push_back(71);
        trans2[32].push_back(71);
        trans2[33].push_back(71);
        trans2[34].push_back(71);
        trans2[35].push_back(71);
        trans2[36].push_back(71);
        trans2[105].push_back(30);
        trans2[104].push_back(30);
        trans2[85].push_back(72);
        trans2[22].push_back(-35);
        trans2[6].push_back(-13);
        trans2[7].push_back(-12);
        trans2[109].push_back(73);
        trans2[88].push_back(2);
        trans2[12].push_back(19);
        trans2[53].push_back(74);
        trans2[105].push_back(2);
        trans2[104].push_back(2);
        trans2[106].push_back(2);
        trans2[86].push_back(2);
        trans2[22].push_back(-35);
        trans2[90].push_back(-43);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[70].push_back(30);
        trans2[116].push_back(-41);
        trans2[19].push_back(30);
        trans2[71].push_back(30);
        trans2[73].push_back(75);
        trans2[94].push_back(-11);
        trans2[126].push_back(76);
        trans2[125].push_back(77);
        trans2[100].push_back(-48);
        trans2[3].push_back(-47);
        trans2[96].push_back(78);
        trans2[74].push_back(-46);
        trans2[55].push_back(79);
        trans2[40].push_back(5);
        trans2[128].push_back(-11);
        trans2[2].push_back(15);
        trans2[22].push_back(80);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[90].push_back(-43);
        trans2[116].push_back(-41);
        trans2[116].push_back(-41);
        trans2[38].push_back(40);
        trans2[78].push_back(-15);
        trans2[112].push_back(4);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[118].push_back(15);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[90].push_back(-43);
        trans2[77].push_back(-15);
        trans2[76].push_back(-15);
        trans2[39].push_back(-1);
        trans2[6].push_back(-13);
        trans2[7].push_back(-12);
        trans2[28].push_back(-2);
        trans2[59].push_back(-15);
        trans2[113].push_back(81);
        trans2[114].push_back(82);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[109].push_back(67);
        trans2[90].push_back(-43);
        trans2[116].push_back(-41);
        trans2[115].push_back(83);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[21].push_back(-15);
        trans2[14].push_back(2);
        trans2[44].push_back(2);
        trans2[17].push_back(2);
        trans2[25].push_back(2);
        trans2[13].push_back(2);
        trans2[9].push_back(2);
        trans2[112].push_back(84);
        trans2[12].push_back(85);
        trans2[75].push_back(71);
        trans2[22].push_back(-35);
        trans2[103].push_back(-8);
        trans2[5].push_back(30);
        trans2[67].push_back(86);
        trans2[11].push_back(-28);
        trans2[61].push_back(-30);
        trans2[60].push_back(-29);
        trans2[61].push_back(-30);
        trans2[60].push_back(-29);
        trans2[11].push_back(-28);
        trans2[74].push_back(-46);
        trans2[3].push_back(-47);
        trans2[100].push_back(-48);
        trans2[75].push_back(19);
        trans2[5].push_back(2);
        trans2[112].push_back(42);
        trans2[85].push_back(22);
        trans2[3].push_back(-47);
        trans2[74].push_back(-46);
        trans2[100].push_back(-48);
        trans2[85].push_back(11);
        trans2[116].push_back(-41);
        trans2[64].push_back(71);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[65].push_back(71);
        trans2[90].push_back(-43);
        trans2[80].push_back(2);
        trans2[75].push_back(87);
        trans2[130].push_back(-17);
        trans2[68].push_back(-20);
        trans2[131].push_back(-21);
        trans2[14].push_back(53);
        trans2[44].push_back(53);
        trans2[17].push_back(53);
        trans2[25].push_back(53);
        trans2[13].push_back(53);
        trans2[9].push_back(53);
        trans2[82].push_back(-19);
        trans2[79].push_back(88);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[83].push_back(-18);
        trans2[68].push_back(-20);
        trans2[131].push_back(-21);
        trans2[130].push_back(-17);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[82].push_back(-19);
        trans2[10].push_back(-31);
        trans2[109].push_back(43);
        trans2[83].push_back(-18);
        trans2[65].push_back(19);
        trans2[64].push_back(19);
        trans2[77].push_back(-15);
        trans2[76].push_back(-15);
        trans2[10].push_back(-31);
        trans2[78].push_back(-15);
        trans2[73].push_back(8);
        trans2[46].push_back(2);
        trans2[52].push_back(2);
        trans2[66].push_back(2);
        trans2[4].push_back(89);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[116].push_back(-41);
        trans2[40].push_back(30);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[50].push_back(90);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[105].push_back(8);
        trans2[104].push_back(8);
        trans2[90].push_back(-43);
        trans2[109].push_back(55);
        trans2[18].push_back(18);
        trans2[100].push_back(-48);
        trans2[74].push_back(-46);
        trans2[3].push_back(-47);
        trans2[85].push_back(10);
        trans2[10].push_back(-31);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[94].push_back(-11);
        trans2[116].push_back(-41);
        trans2[100].push_back(-48);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[3].push_back(-47);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[1].push_back(-6);
        trans2[74].push_back(-46);
        trans2[27].push_back(91);
        trans2[90].push_back(-43);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[116].push_back(-41);
        trans2[83].push_back(-18);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[21].push_back(-15);
        trans2[6].push_back(-13);
        trans2[7].push_back(-12);
        trans2[82].push_back(-19);
        trans2[68].push_back(-20);
        trans2[131].push_back(-21);
        trans2[130].push_back(-17);
        trans2[61].push_back(66);
        trans2[60].push_back(66);
        trans2[80].push_back(30);
        trans2[20].push_back(29);
        trans2[99].push_back(92);
        trans2[128].push_back(-11);
        trans2[57].push_back(-16);
        trans2[80].push_back(93);
        trans2[92].push_back(94);
        trans2[14].push_back(30);
        trans2[44].push_back(30);
        trans2[17].push_back(30);
        trans2[25].push_back(30);
        trans2[13].push_back(30);
        trans2[9].push_back(30);
        trans2[90].push_back(-43);
        trans2[116].push_back(-41);
        trans2[45].push_back(95);
        trans2[128].push_back(-11);
        trans2[81].push_back(96);
        trans2[57].push_back(-16);
        trans2[64].push_back(97);
        trans2[73].push_back(53);
        trans2[62].push_back(98);
        trans2[21].push_back(-15);
        trans2[118].push_back(10);
        trans2[105].push_back(10);
        trans2[104].push_back(10);
        trans2[2].push_back(10);
        trans2[29].push_back(-7);
        trans2[100].push_back(-48);
        trans2[105].push_back(22);
        trans2[104].push_back(22);
        trans2[82].push_back(-19);
        trans2[20].push_back(4);
        trans2[88].push_back(10);
        trans2[130].push_back(-17);
        trans2[106].push_back(10);
        trans2[86].push_back(10);
        trans2[68].push_back(-20);
        trans2[131].push_back(-21);
        trans2[26].push_back(99);
        trans2[19].push_back(22);
        trans2[71].push_back(22);
        trans2[74].push_back(-46);
        trans2[111].push_back(100);
        trans2[3].push_back(-47);
        trans2[83].push_back(-18);
        trans2[24].push_back(101);
        trans2[5].push_back(102);
        trans2[20].push_back(103);
        trans2[107].push_back(104);
        trans2[43].push_back(105);
        trans2[58].push_back(106);
        trans2[12].push_back(71);
        trans2[11].push_back(-28);
        trans2[61].push_back(-30);
        trans2[60].push_back(-29);
        trans2[59].push_back(4);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[90].push_back(-43);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[91].push_back(-3);
        trans2[116].push_back(-41);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[108].push_back(19);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[129].push_back(74);
        trans2[116].push_back(-41);
        trans2[129].push_back(107);
        trans2[90].push_back(-43);
        trans2[46].push_back(22);
        trans2[52].push_back(22);
        trans2[66].push_back(22);
        trans2[70].push_back(15);
        trans2[88].push_back(8);
        trans2[106].push_back(8);
        trans2[86].push_back(8);
        trans2[10].push_back(-31);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[80].push_back(5);
        trans2[6].push_back(-13);
        trans2[7].push_back(-12);
        trans2[22].push_back(-35);
        trans2[59].push_back(-15);
        trans2[59].push_back(42);
        trans2[73].push_back(15);
        trans2[22].push_back(-35);
        trans2[109].push_back(40);
        trans2[105].push_back(108);
        trans2[104].push_back(108);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[90].push_back(-43);
        trans2[116].push_back(-41);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[10].push_back(-31);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[109].push_back(107);
        trans2[109].push_back(74);
        trans2[80].push_back(53);
        trans2[108].push_back(71);
        trans2[10].push_back(-31);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[21].push_back(109);
        trans2[109].push_back(38);
        trans2[59].push_back(63);
        trans2[128].push_back(-11);
        trans2[40].push_back(22);
        trans2[84].push_back(110);
        trans2[88].push_back(30);
        trans2[106].push_back(30);
        trans2[86].push_back(30);
        trans2[40].push_back(2);
        trans2[38].push_back(111);
        trans2[22].push_back(-35);
        trans2[40].push_back(15);
        trans2[69].push_back(112);
        trans2[77].push_back(113);
        trans2[76].push_back(114);
        trans2[73].push_back(11);
        trans2[78].push_back(115);
        trans2[53].push_back(40);
        trans2[57].push_back(-16);
        trans2[93].push_back(-42);
        trans2[97].push_back(-38);
        trans2[90].push_back(-43);
        trans2[30].push_back(-36);
        trans2[8].push_back(-37);
        trans2[127].push_back(-39);
        trans2[102].push_back(-40);
        trans2[85].push_back(53);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[10].push_back(-31);
        trans2[117].push_back(-14);
        trans2[18].push_back(54);
        trans2[83].push_back(-18);
        trans2[10].push_back(-31);
        trans2[3].push_back(-47);
        trans2[129].push_back(57);
        trans2[74].push_back(-46);
        trans2[22].push_back(-35);
        trans2[10].push_back(-31);
        trans2[100].push_back(-48);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[106].push_back(11);
        trans2[86].push_back(11);
        trans2[130].push_back(-17);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[70].push_back(53);
        trans2[88].push_back(11);
        trans2[68].push_back(-20);
        trans2[131].push_back(-21);
        trans2[82].push_back(-19);
        trans2[105].push_back(11);
        trans2[104].push_back(11);
        trans2[82].push_back(-19);
        trans2[22].push_back(-35);
        trans2[83].push_back(-18);
        trans2[77].push_back(-15);
        trans2[76].push_back(-15);
        trans2[65].push_back(116);
        trans2[70].push_back(5);
        trans2[68].push_back(-20);
        trans2[131].push_back(-21);
        trans2[78].push_back(-15);
        trans2[130].push_back(-17);
        trans2[129].push_back(55);
        trans2[121].push_back(71);
        trans2[78].push_back(-15);
        trans2[42].push_back(117);
        trans2[77].push_back(-15);
        trans2[76].push_back(-15);
        trans2[113].push_back(74);
        trans2[114].push_back(74);
        trans2[113].push_back(107);
        trans2[114].push_back(107);
        trans2[115].push_back(74);
        trans2[115].push_back(107);
        trans2[38].push_back(74);
        trans2[123].push_back(19);
        trans2[124].push_back(19);
        trans2[122].push_back(19);
        trans2[47].push_back(-32);
        trans2[48].push_back(-33);
        trans2[49].push_back(-34);
        trans2[10].push_back(-31);
        trans2[41].push_back(118);
        trans2[14].push_back(15);
        trans2[44].push_back(15);
        trans2[17].push_back(15);
        trans2[25].push_back(15);
        trans2[13].push_back(15);
        trans2[9].push_back(15);
        trans2[105].push_back(5);
        trans2[104].push_back(5);
        trans2[105].push_back(119);
        trans2[104].push_back(120);
        trans2[5].push_back(53);
        trans2[122].push_back(71);
        trans2[123].push_back(71);
        trans2[124].push_back(71);
        trans2[70].push_back(121);
        trans2[100].push_back(-48);
        trans2[73].push_back(22);
        trans2[3].push_back(-47);
        trans2[74].push_back(-46);
        trans2[113].push_back(43);
        trans2[114].push_back(43);
        trans2[88].push_back(22);
        trans2[106].push_back(22);
        trans2[86].push_back(22);
        trans2[22].push_back(-35);
        trans2[115].push_back(43);
        trans2[88].push_back(122);
        trans2[106].push_back(123);
        trans2[86].push_back(124);
        trans2[120].push_back(125);
        trans2[119].push_back(126);
        trans2[22].push_back(-35);
        trans2[129].push_back(67);
        trans2[11].push_back(-28);
        trans2[6].push_back(-13);
        trans2[7].push_back(-12);
        trans2[61].push_back(-30);
        trans2[60].push_back(-29);
        trans2[53].push_back(127);
        trans2[6].push_back(-13);
        trans2[7].push_back(-12);
        trans2[88].push_back(53);
        trans2[89].push_back(-10);
        trans2[110].push_back(128);
        trans2[106].push_back(53);
        trans2[86].push_back(53);
        trans2[83].push_back(-18);
        trans2[83].push_back(-18);
        trans2[82].push_back(-19);
        trans2[130].push_back(-17);
        trans2[82].push_back(-19);
        trans2[68].push_back(-20);
        trans2[131].push_back(-21);
        trans2[31].push_back(-22);
        trans2[32].push_back(-23);
        trans2[33].push_back(-24);
        trans2[34].push_back(-25);
        trans2[35].push_back(-26);
        trans2[36].push_back(-27);
        trans2[21].push_back(42);
        trans2[6].push_back(-13);
        trans2[7].push_back(-12);
        trans2[59].push_back(129);
        trans2[68].push_back(-20);
        trans2[131].push_back(-21);
        trans2[130].push_back(-17);
        trans2[22].push_back(-35);
        trans2[11].push_back(-28);
        trans2[73].push_back(10);
        trans2[61].push_back(-30);
        trans2[60].push_back(-29);
        trans2[85].push_back(8);
        trans2[115].push_back(58);
        trans2[124].push_back(130);
        trans2[122].push_back(131);
        trans2[21].push_back(-15);
        trans2[113].push_back(58);
        trans2[114].push_back(58);
        trans2[21].push_back(-15);
        string s,t;
        vector<pair<string,string>> temp;
        while(getline(cin,line)) {
            if (cin.eof()){
                break;
            }
            if (line == "") continue;
            line = trim(line);
            stringstream ss(line);
            getline(ss, s, ' ');
            getline(ss, t, ' ');
            pair<string, string> sp(s,t);
            temp.push_back(sp);
        }
        s = "EOF";
        pair<string, string> tempPair(s,s);
        sequence.push_back(tempPair);
        while (temp.size()>0) {
            tempPair = temp[temp.size()-1];
            sequence.push_back(tempPair);
            temp.pop_back();
        }
        s = "BOF";
        tempPair.first = s;
        tempPair.second = s;
        sequence.push_back(tempPair);
        while(sequence.size() > 0) {
            Tree TT;
            if (b == 0) {
                nextChar = sequence[sequence.size()-1].first;
                nextCharSecond = sequence[sequence.size()-1].second;
                sequence.pop_back();
                correct++;
            } else {
                nextChar = processing[processing.size()-1].token.first;
                TT = processing[processing.size()-1];
                processing.pop_back();
            }
            vector<string>::iterator iter = find(trans1[state].begin(), trans1[state].end(), nextChar);
            if (iter == trans1[state].end()) {
                throw Failure("ERROR at "+to_string(correct-1));
            }
            int index = distance(trans1[state].begin(), iter);
            state = trans2[state][index];
            if (state < 0) {
                int rule = state * -1;
                int n = rules[rule].size() - 1;
                pair<string, string> tempPair(nextChar,nextCharSecond);
                sequence.push_back(tempPair);
                correct--;
                Tree TempRule;
                for (i = 0; i < n; i++) {
                    TempRule.children.push_back(processing[processing.size()-1]);
                    processing.pop_back();
                    preStates.pop_back();
                }
                nextChar = rules[rule][0];
                TempRule.token.first = nextChar;
                nextCharSecond = "";
                TempRule.token.second = nextCharSecond;
                for(int j = 0; j < n+1; j++) {
                    TempRule.rule += rules[rule][j];
                    if (j != n) {
                        TempRule.rule += " ";
                    }
                }
                processing.push_back(TempRule);
                state = preStates[preStates.size()-1];
                b = 1;
            } else {
                if (b == 0) {
                    preStates.push_back(state);
                    Tree tempTree;
                    tempTree.token.first = nextChar;
                    tempTree.token.second = nextCharSecond;
                    tempTree.rule="";
                    processing.push_back(tempTree);
                } else {
                    preStates.push_back(state);
                    processing.push_back(TT);
                    b = 0;
                }
            }
        }
        // accepted
        Tree  big;
        big.rule = "start BOF procedures EOF";
        big.children.push_back(processing[2]);
        big.children.push_back(processing[1]);
        big.children.push_back(processing[0]);
        
        prePrint(big);
        
        rules.clear();
        trans1.clear();
        trans2.clear();
        return 0;
        
    } catch (Failure &f) {
        cerr << f.what() << endl;
        rules.clear();
        trans1.clear();
        trans2.clear();
        return 1;
    }
    
}
